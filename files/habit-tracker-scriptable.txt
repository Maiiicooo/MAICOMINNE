// ======================
// USER CONFIGURATION
// ======================

// Set the name of your habit — this will show bottom-left on the widget
const EVENT_NAME = "workout";

// Set the date when you started your habit
// Format: new Date(year, month (0-indexed), day)
// Example: April 2, 2025 → new Date(2025, 3, 2)
const CURRENT_YEAR = new Date().getFullYear();
const HABIT_START_DATE = new Date(CURRENT_YEAR, 3, 2); // ← your start date

// Add the days you missed (relative to your start date)
// Example: [5, 7, 10] means you missed day 5, 7 and 10
// Day 1 = your start day, day 2 = the day after, and so on
const FAILED_DAYS = [5, 7, 10];

// Optional: set a background image using a URL, or leave empty
const BG_IMAGE_URL = "";

// Colors — change these if you want a different color scheme
const COLOR_COMPLETED = new Color("#00AA00"); // Green = success
const COLOR_FAILED = new Color("#FF0000");    // Red = missed
const COLOR_UPCOMING = new Color("#808080");  // Gray = future
const COLOR_BEFORE = new Color("#FFFFFF");    // White = before you started
const TEXT_COLOR = new Color("#FFFFFF");      // White = bottom text

// Layout — only tweak if you want to change spacing/sizes
const CIRCLE_SIZE = 4;
const CIRCLE_SPACING = 3;
const PADDING = 8;
const TEXT_SPACING = 8;
const BG_COLOR = "#406260";
const BG_OVERLAY_OPACITY = 0.5;
const WIDGET_WIDTH = 320;
const MS_PER_DAY = 86400000;

// Full year setup — no need to touch this
const FULL_YEAR_START = new Date(CURRENT_YEAR, 0, 1);
const FULL_YEAR_END = new Date(CURRENT_YEAR, 11, 31);
const FULL_YEAR_DAYS_TOTAL = Math.round((FULL_YEAR_END - FULL_YEAR_START) / MS_PER_DAY) + 1;

// ======================
// DO NOT EDIT BELOW UNLESS YOU KNOW WHAT YOU'RE DOING
// ======================

const NOW = new Date();

const habitDaysPassed = NOW >= HABIT_START_DATE
  ? Math.floor((NOW - HABIT_START_DATE) / MS_PER_DAY) + 1
  : 0;

let streak = 0;
for (let d = habitDaysPassed; d >= 1; d--) {
  if (FAILED_DAYS.includes(d)) break;
  streak++;
}

const widget = new ListWidget();

if (BG_IMAGE_URL) {
  try {
    const req = new Request(BG_IMAGE_URL);
    widget.backgroundImage = await req.loadImage();
  } catch (e) {
    console.log("Background image failed to load.");
  }
} else {
  const overlay = new LinearGradient();
  overlay.locations = [0, 1];
  overlay.colors = [
    new Color(BG_COLOR, BG_OVERLAY_OPACITY),
    new Color(BG_COLOR, BG_OVERLAY_OPACITY)
  ];
  widget.backgroundGradient = overlay;
}

widget.setPadding(PADDING, PADDING, PADDING, PADDING);

// Each column = 1 week (7 days)
const MAX_DOTS_PER_COLUMN = 7;
const totalColumns = Math.ceil(FULL_YEAR_DAYS_TOTAL / MAX_DOTS_PER_COLUMN);

const outerStack = widget.addStack();
outerStack.layoutHorizontally();
outerStack.addSpacer();

const columnsStack = outerStack.addStack();
columnsStack.layoutHorizontally();
columnsStack.spacing = CIRCLE_SPACING;

for (let col = 0; col < totalColumns; col++) {
  const colStack = columnsStack.addStack();
  colStack.layoutVertically();
  colStack.spacing = CIRCLE_SPACING;

  for (let row = 0; row < MAX_DOTS_PER_COLUMN; row++) {
    const dayIndex = col * MAX_DOTS_PER_COLUMN + row + 1;
    if (dayIndex > FULL_YEAR_DAYS_TOTAL) break;

    const currentDate = new Date(CURRENT_YEAR, 0, dayIndex);
    let dotColor;

    if (currentDate < HABIT_START_DATE) {
      dotColor = COLOR_BEFORE;
    } else if (currentDate <= NOW) {
      const habitDayNumber = Math.floor((currentDate - HABIT_START_DATE) / MS_PER_DAY) + 1;
      dotColor = FAILED_DAYS.includes(habitDayNumber) ? COLOR_FAILED : COLOR_COMPLETED;
    } else {
      dotColor = COLOR_UPCOMING;
    }

    const dot = colStack.addText("●");
    dot.font = Font.systemFont(CIRCLE_SIZE);
    dot.textColor = dotColor;
  }
}

outerStack.addSpacer();

widget.addSpacer(TEXT_SPACING);

// Bottom row: habit name left, streak right
const footer = widget.addStack();
footer.layoutHorizontally();

const workoutText = footer.addText(EVENT_NAME);
workoutText.font = new Font("Menlo-Bold", 12);
workoutText.textColor = TEXT_COLOR;

footer.addSpacer();

const streakDisplay = footer.addText(`${streak} day streak`);
streakDisplay.font = new Font("Menlo", 12);
streakDisplay.textColor = TEXT_COLOR;

if (config.runsInWidget) {
  Script.setWidget(widget);
} else {
  widget.presentMedium();
}
Script.complete();
